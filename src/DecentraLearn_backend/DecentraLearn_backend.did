type Course = record {
    course_name: text;
    course_topics: CourseTopic;
    course_desc: text;
    course_image_link: text;
    course_slug: text;
};

type CourseEntry = record {
    course_id: nat32;
    course: Course;
};

type CourseTopic = variant { Technology; Business; Design; Marketing; Development; Other };

type Module = record {
    title: text;
    description: text;
    order: nat32;
    course_id: nat32;
};

type ModuleEntry = record {
    module_id: nat32;
    module: Module;
};

type Lesson = record {
    title: text;
    description: text;
    pdf_file: text;
    module_id: nat32;
};

type LessonEntry = record {
    lesson_id: nat32;
    lesson: Lesson;
};

type ChatMessage = record {
    role: text;
    content: text;
};

type ModuleProgress = record {
    module_id: nat32;
    completed: bool;
    last_accessed: nat64;
};

type Enrollment = record {
    user_id: principal;
    course_id: nat32;
    enrolled_date: nat64;
    last_accessed_date: nat64;
    current_module_id: nat32;
    modules_progress: vec ModuleProgress;
    completed: bool;
};

service : {
    greet: (text) -> (text) query;
    whoami: () -> (principal) query;
    get_courses: () -> (vec CourseEntry) query;
    get_course: (nat32) -> (opt Course) query;
    get_course_by_slug: (text) -> (opt Course) query;
    add_course: (Course) -> (nat32);
    edit_course: (nat32, Course) -> (bool);
    remove_course: (nat32) -> (bool);
    get_modules: () -> (vec ModuleEntry) query;
    get_course_modules: (nat32) -> (vec ModuleEntry) query;
    get_module: (nat32) -> (opt Module) query;
    add_module: (Module) -> (nat32);
    edit_module: (nat32, Module) -> (bool);
    remove_module: (nat32) -> (bool);
    get_module_count: (nat32) -> (nat32) query;
    get_lessons: () -> (vec LessonEntry) query;
    get_module_lessons: (nat32) -> (vec LessonEntry) query;
    get_lesson: (nat32) -> (opt Lesson) query;
    add_lesson: (Lesson) -> (nat32);
    edit_lesson: (nat32, Lesson) -> (bool);
    remove_lesson: (nat32) -> (bool);
    get_lesson_count: (nat32) -> (nat32) query;
    prompt: (text) -> (text);
    chat: (vec ChatMessage) -> (text);
    get_enrollments: () -> (vec Enrollment) query;
    get_enrollment_count: () -> (nat32) query;
    enroll_student: (nat32) -> (bool);
    get_course_enrollments: (nat32) -> (vec Enrollment) query;
    initialize_course_progress: (nat32) -> (bool);
}